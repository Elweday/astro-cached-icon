---
import { load } from './utils/load.ts';
import { DOMParser } from '@xmldom/xmldom';
import type { HTMLAttributes } from 'astro/types';

type ShortHand = `${string}:${string}`;
 
type Props =  HTMLAttributes<'svg'>  & ( 
    { icon: ShortHand, name?: undefined, pack?: undefined } | { name: string; pack: string, icon?: undefined }
)


const { icon, name, pack, ...attrs } = Astro.props as Props;

const rawHTML = await load(icon, name, pack);
const parser = new DOMParser();
const svgDoc = parser.parseFromString(rawHTML, 'text/html');
const el = svgDoc.documentElement;

Object.entries(attrs).forEach(([key, value]) => {
    el.setAttribute(key, String(value));
})

const innerHTML = el?.toString()
---

<Fragment set:html={innerHTML} /> 
