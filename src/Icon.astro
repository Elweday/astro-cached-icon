---
import { load } from './utils/load.ts';
import { DOMParser } from '@xmldom/xmldom';
import type { HTMLAttributes } from 'astro/types';

type ShortHand = `${string}:${string}`;
 
type Props =  HTMLAttributes<'svg'>  & ( 
    { icon: ShortHand, name?: undefined, pack?: undefined } | { name: string; pack: string, icon?: undefined }
)


const { icon, name, pack, ...attrs } = Astro.props as Props;

let innerHTML = await load(icon, name, pack);
var parser = new DOMParser();
var svgDoc = parser.parseFromString(innerHTML, 'text/html');
for (const [key, value] of Object.entries(attrs)) {
    svgDoc.documentElement?.setAttribute(key, String(value));
}

innerHTML = svgDoc?.documentElement?.toString()
---

<Fragment set:html={innerHTML} /> 
